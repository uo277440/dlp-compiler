@startuml Expressions
skinparam style strictuml
skinparam monochrome true


interface Visitor {
    visit(Program program, ParamType param):ReturnType

     visit(VarDefinition vd, ParamType param):ReturnType

      visit(FunctionDefinition fd, ParamType param):ReturnType

      (ArithmeticOperation ao, ParamType param):ReturnType

      visit(Cast cast, ParamType param):ReturnType

     visit(CharConstant c, ParamType param):ReturnType

      visit(ComparisonOperation co, ParamType param):ReturnType

      visit(FieldAccess fa, ParamType param):ReturnType

      visit(Id id, ParamType param):ReturnType

      visit(Indexing indexing, ParamType param):ReturnType

      visit(IntLiteral il, ParamType param):ReturnType

      visit(Invocation invocation, ParamType param):ReturnType

      visit(LogicOperation lo, ParamType param):ReturnType

      visit(Not not, ParamType param):ReturnType

      visit(RealConstant rc, ParamType param):ReturnType

      visit(UnaryMinus um, ParamType param):ReturnType

      visit(Read read, ParamType param):ReturnType

      visit(Assignment assignment, ParamType param):ReturnType

      visit(If i, ParamType param):ReturnType

      visit(While w, ParamType param):ReturnType

      visit(Write w, ParamType param):ReturnType

      visit(Return r, ParamType param):ReturnType

      visit(Array a, ParamType param):ReturnType

      visit(Char c, ParamType param):ReturnType

      visit(DoubleType d, ParamType param):ReturnType

      visit(FunctionType ft, ParamType param):ReturnType

      visit(Int i, ParamType param):ReturnType

      visit(Struct s, ParamType param):ReturnType

      visit(StructField sf, ParamType param):ReturnType

     visit(VoidType v, ParamType param):ReturnType
}

class AbstractVisitor{
visit(Program program, ParamType param):ReturnType

     visit(VarDefinition vd, ParamType param):ReturnType

      visit(FunctionDefinition fd, ParamType param):ReturnType
       visit(...)
}

class ExecuteCgVisitor {
    valueV: ValueVisitor
}
class ValueVisitor {
    addressV: AddressVisitor
}

class OffsetVisitor{
size: int
}
class AddressVisitor{

}
class TypeCheckingVisitor{
    op: String
    leftExpression: Expression
    rightExpression: Expression
}
class IdentificationVisitor{
    st: SymbolTable

}
class CodeGenerator{
    out: OutputStreamWriter
}

Visitor <|-- AbstractVisitor
AbstractVisitor <|.. IdentificationVisitor
AbstractVisitor <|.. TypeCheckingVisitor
AbstractVisitor <|.. AddressVisitor
AbstractVisitor <|.. OffsetVisitor
AbstractVisitor <|.. ValueVisitor
AbstractVisitor <|.. ExecuteCgVisitor
ExecuteCgVisitor o-- "1" ValueVisitor
ValueVisitor o-- "1" AddressVisitor
ExecuteCgVisitor o-- "1" AddressVisitor
ExecuteCgVisitor o-- "1" CodeGenerator
AddressVisitor o-- "1" CodeGenerator
ValueVisitor o-- "1" CodeGenerator

@enduml
